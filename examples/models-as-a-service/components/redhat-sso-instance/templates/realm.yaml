apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: '{{ .Values.keycloak.realm.name | default "maas" }}'
  namespace: '{{ .Values.namespace | default "redhat-sso" }}'
spec:
  keycloakCRName: '{{ .Values.keycloak.name | default "redhat-sso" }}'
  realm:
    id: 3scale-maas
    realm: 3scale-maas
    displayName: 3scale MaaS integration
    notBefore: 0
    defaultSignatureAlgorithm: RS256
    revokeRefreshToken: true
    refreshTokenMaxReuse: 0
    accessTokenLifespan: 300
    accessTokenLifespanForImplicitFlow: 900
    ssoSessionIdleTimeout: 1800
    ssoSessionMaxLifespan: 36000
    ssoSessionIdleTimeoutRememberMe: 0
    ssoSessionMaxLifespanRememberMe: 0
    offlineSessionIdleTimeout: 2.592e+06
    offlineSessionMaxLifespanEnabled: false
    offlineSessionMaxLifespan: 5.184e+06
    clientSessionIdleTimeout: 0
    clientSessionMaxLifespan: 0
    clientOfflineSessionIdleTimeout: 0
    clientOfflineSessionMaxLifespan: 0
    accessCodeLifespan: 60
    accessCodeLifespanUserAction: 300
    accessCodeLifespanLogin: 1800
    actionTokenGeneratedByAdminLifespan: 43200
    actionTokenGeneratedByUserLifespan: 300
    oauth2DeviceCodeLifespan: 600
    oauth2DevicePollingInterval: 5
    enabled: true
    sslRequired: external
    registrationAllowed: true
    registrationEmailAsUsername: false
    rememberMe: false
    verifyEmail: false
    loginWithEmailAllowed: true
    duplicateEmailsAllowed: false
    resetPasswordAllowed: true
    editUsernameAllowed: false
    bruteForceProtected: true
    permanentLockout: false
    maxFailureWaitSeconds: 900
    minimumQuickLoginWaitSeconds: 60
    waitIncrementSeconds: 60
    quickLoginCheckMilliSeconds: 1000
    maxDeltaTimeSeconds: 43200
    failureFactor: 30
    
    # Default roles for the realm
    roles:
      realm:
        - id: default-roles-maas
          name: default-roles-maas
          description: Default roles for MaaS realm
          composite: true
          composites:
            realm:
              - offline_access
              - uma_authorization
            client:
              account:
                - manage-account
                - view-profile
          clientRole: false
          containerId: maas
        - id: uma_authorization
          name: uma_authorization
          description: '${role_uma_authorization}'
          composite: false
          clientRole: false
          containerId: maas
        - id: offline_access
          name: offline_access
          description: '${role_offline-access}'
          composite: false
          clientRole: false
          containerId: maas
      client:
        realm-management:
          - id: realm-admin
            name: realm-admin
            description: '${role_realm-admin}'
            composite: true
            composites:
              client:
                realm-management:
                  - view-clients
                  - query-users
                  - manage-authorization
                  - view-events
                  - manage-users
                  - query-clients
                  - manage-clients
                  - query-realms
                  - impersonation
                  - manage-realm
                  - manage-identity-providers
                  - view-authorization
                  - create-client
                  - query-groups
                  - view-users
                  - view-realm
                  - view-identity-providers
                  - manage-events
            clientRole: true
            containerId: realm-management
        account:
          - id: manage-account
            name: manage-account
            description: '${role_manage-account}'
            composite: true
            composites:
              client:
                account:
                  - manage-account-links
            clientRole: true
            containerId: account
          - id: view-profile
            name: view-profile
            description: '${role_view-profile}'
            composite: false
            clientRole: true
            containerId: account

    defaultRole:
      id: default-roles-maas
      name: default-roles-maas
      description: Default roles for MaaS realm
      composite: true
      clientRole: false
      containerId: 3scale-maas

    requiredCredentials:
      - password
    
    # OTP Policy configuration
    otpPolicyType: totp
    otpPolicyAlgorithm: HmacSHA1
    otpPolicyInitialCounter: 0
    otpPolicyDigits: 6
    otpPolicyLookAheadWindow: 1
    otpPolicyPeriod: 30
    otpPolicyCodeReusable: false
    otpSupportedApplications:
      - totpAppGoogleName
      - totpAppFreeOTPName
      - totpAppMicrosoftAuthenticatorName

    # WebAuthn configuration
    webAuthnPolicyRpEntityName: keycloak
    webAuthnPolicySignatureAlgorithms:
      - ES256
    webAuthnPolicyRpId: ""
    webAuthnPolicyAttestationConveyancePreference: not specified
    webAuthnPolicyAuthenticatorAttachment: not specified
    webAuthnPolicyRequireResidentKey: not specified
    webAuthnPolicyUserVerificationRequirement: not specified
    webAuthnPolicyCreateTimeout: 0
    webAuthnPolicyAvoidSameAuthenticatorRegister: false

    # Client configuration for 3scale integration
    clients:
      - id: 3scale-client
        clientId: "3scale"
        name: "Red Hat Single Sign-On"
        description: "Client for 3scale integration"
        rootUrl: ""
        adminUrl: ""
        baseUrl: ""
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: '{{ .Values.threescaleClientSecret | default (randAlphanumeric 32) }}'
        redirectUris:
          - "*"
        webOrigins:
          - "*"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          saml.assertion.signature: "false"
          saml.force.post.binding: "false"
          saml.multivalued.roles: "false"
          saml.encrypt: "false"
          post.logout.redirect.uris: "+"
          backchannel.logout.revoke.offline.tokens: "false"
          saml.server.signature: "false"
          saml.server.signature.keyinfo.ext: "false"
          exclude.session.state.from.auth.response: "false"
          backchannel.logout.session.required: "true"
          client_credentials.use_refresh_token: "false"
          saml_force_name_id_format: "false"
          saml.client.signature: "false"
          tls.client.certificate.bound.access.tokens: "false"
          saml.authnstatement: "false"
          display.on.consent.screen: "false"
          saml.onetimeuse.condition: "false"
          # Automatically approve accounts
          auto.approve.accounts: "true"
        fullScopeAllowed: true
        nodeReRegistrationTimeout: -1
        protocolMappers:
          - id: email-verified-mapper
            name: "email verified"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-property-mapper"
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "emailVerified"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "email_verified"
              jsonType.label: "boolean"
          - id: username-mapper
            name: "username"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-property-mapper"
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - id: email-mapper
            name: "email"
            protocol: "openid-connect"
            protocolMapper: "oidc-usermodel-property-mapper"
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: "email"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: "email"
              jsonType.label: "String"
          - id: full-name-mapper
            name: "full name"
            protocol: "openid-connect"
            protocolMapper: "oidc-full-name-mapper"
            consentRequired: false
            config:
              id.token.claim: "true"
              access.token.claim: "true"
              userinfo.token.claim: "true"
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      
      # Standard Keycloak clients
      - id: account-client
        clientId: account
        name: ${client_account}
        rootUrl: ${authBaseUrl}
        baseUrl: /realms/3scale-maas/account/
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        secret: '{{ randAlphanumeric 32 }}'
        redirectUris:
          - /realms/3scale-maas/account/*
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
      
      - id: account-console-client
        clientId: account-console
        name: ${client_account-console}
        rootUrl: ${authBaseUrl}
        baseUrl: /realms/3scale-maas/account/
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - /realms/3scale-maas/account/*
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
          pkce.code.challenge.method: S256
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: audience-resolve-mapper
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
      
      - id: admin-cli-client
        clientId: admin-cli
        name: ${client_admin-cli}
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: false
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
      
      - id: broker-client
        clientId: broker
        name: ${client_broker}
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
      
      - id: realm-management-client
        clientId: realm-management
        name: ${client_realm-management}
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        notBefore: 0
        bearerOnly: true
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: false
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
      
      - id: security-admin-console-client
        clientId: security-admin-console
        name: ${client_security-admin-console}
        rootUrl: ${authAdminUrl}
        baseUrl: /admin/3scale-maas/console/
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: false
        clientAuthenticatorType: client-secret
        redirectUris:
          - /admin/3scale-maas/console/*
        webOrigins:
          - "+"
        notBefore: 0
        bearerOnly: false
        consentRequired: false
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: false
        serviceAccountsEnabled: false
        publicClient: true
        frontchannelLogout: false
        protocol: openid-connect
        attributes:
          post.logout.redirect.uris: "+"
          pkce.code.challenge.method: S256
        fullScopeAllowed: false
        nodeReRegistrationTimeout: 0
        protocolMappers:
          - id: locale-mapper
            name: locale
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: locale
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: locale
              jsonType.label: String

    # Client scopes configuration
    clientScopes:
      - id: email-scope
        name: email
        description: "OpenID Connect built-in scope: email"
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${emailScopeConsentText}
        protocolMappers:
          - id: email-verified-scope-mapper
            name: email verified
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: emailVerified
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: email_verified
              jsonType.label: boolean
          - id: email-scope-mapper
            name: email
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: email
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: email
              jsonType.label: String
      
      - id: address-scope
        name: address
        description: "OpenID Connect built-in scope: address"
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${addressScopeConsentText}
        protocolMappers:
          - id: address-scope-mapper
            name: address
            protocol: openid-connect
            protocolMapper: oidc-address-mapper
            consentRequired: false
            config:
              user.attribute.formatted: formatted
              user.attribute.country: country
              user.attribute.postal_code: postal_code
              userinfo.token.claim: "true"
              user.attribute.street: street
              id.token.claim: "true"
              user.attribute.region: region
              access.token.claim: "true"
              user.attribute.locality: locality
      
      - id: offline-access-scope
        name: offline_access
        description: "OpenID Connect built-in scope: offline_access"
        protocol: openid-connect
        attributes:
          consent.screen.text: ${offlineAccessScopeConsentText}
          display.on.consent.screen: "true"
      
      - id: profile-scope
        name: profile
        description: "OpenID Connect built-in scope: profile"
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${profileScopeConsentText}
        protocolMappers:
          - id: family-name-mapper
            name: family name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: lastName
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: family_name
              jsonType.label: String
          - id: given-name-mapper
            name: given name
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: firstName
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: given_name
              jsonType.label: String
          - id: full-name-scope-mapper
            name: full name
            protocol: openid-connect
            protocolMapper: oidc-full-name-mapper
            consentRequired: false
            config:
              id.token.claim: "true"
              access.token.claim: "true"
              userinfo.token.claim: "true"
          - id: username-scope-mapper
            name: username
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: username
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: preferred_username
              jsonType.label: String
      
      - id: phone-scope
        name: phone
        description: "OpenID Connect built-in scope: phone"
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "true"
          consent.screen.text: ${phoneScopeConsentText}
        protocolMappers:
          - id: phone-number-mapper
            name: phone number
            protocol: openid-connect
            protocolMapper: oidc-usermodel-attribute-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: phoneNumber
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: phone_number
              jsonType.label: String
      
      - id: roles-scope
        name: roles
        description: OpenID Connect scope for add user roles to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "true"
          consent.screen.text: ${rolesScopeConsentText}
        protocolMappers:
          - id: client-roles-mapper
            name: client roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            consentRequired: false
            config:
              user.attribute: foo
              access.token.claim: "true"
              claim.name: resource_access.${client_id}.roles
              jsonType.label: String
              multivalued: "true"
          - id: audience-resolve-scope-mapper
            name: audience resolve
            protocol: openid-connect
            protocolMapper: oidc-audience-resolve-mapper
            consentRequired: false
          - id: realm-roles-mapper
            name: realm roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: roles
              jsonType.label: String
      
      - id: web-origins-scope
        name: web-origins
        description: OpenID Connect scope for add allowed web origins to the access token
        protocol: openid-connect
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "false"
          consent.screen.text: ""
        protocolMappers:
          - id: allowed-web-origins-mapper
            name: allowed web origins
            protocol: openid-connect
            protocolMapper: oidc-allowed-origins-mapper
            consentRequired: false
      
      - id: acr-scope
        name: acr
        description: OpenID Connect scope for add acr (authentication context class reference) to the token
        protocol: openid-connect
        attributes:
          include.in.token.scope: "false"
          display.on.consent.screen: "false"
        protocolMappers:
          - id: acr-loa-mapper
            name: acr loa level
            protocol: openid-connect
            protocolMapper: oidc-acr-mapper
            consentRequired: false
            config:
              id.token.claim: "true"
              access.token.claim: "true"
              userinfo.token.claim: "true"
      
      - id: microprofile-jwt-scope
        name: microprofile-jwt
        description: Microprofile - JWT built-in scope
        protocol: openid-connect
        attributes:
          include.in.token.scope: "true"
          display.on.consent.screen: "false"
        protocolMappers:
          - id: groups-jwt-mapper
            name: groups
            protocol: openid-connect
            protocolMapper: oidc-usermodel-realm-role-mapper
            consentRequired: false
            config:
              multivalued: "true"
              userinfo.token.claim: "true"
              user.attribute: foo
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: groups
              jsonType.label: String
          - id: upn-jwt-mapper
            name: upn
            protocol: openid-connect
            protocolMapper: oidc-usermodel-property-mapper
            consentRequired: false
            config:
              userinfo.token.claim: "true"
              user.attribute: username
              id.token.claim: "true"
              access.token.claim: "true"
              claim.name: upn
              jsonType.label: String

    defaultDefaultClientScopes:
      - profile
      - email
      - roles
      - web-origins
      - acr
    defaultOptionalClientScopes:
      - offline_access
      - address
      - phone
      - microprofile-jwt

    # Browser security headers
    browserSecurityHeaders:
      contentSecurityPolicyReportOnly: ""
      xContentTypeOptions: nosniff
      xRobotsTag: none
      xFrameOptions: SAMEORIGIN
      contentSecurityPolicy: frame-src 'self'; frame-ancestors 'self'; object-src 'none';
      xXSSProtection: 1; mode=block
      strictTransportSecurity: max-age=31536000; includeSubDomains

    eventsEnabled: false
    eventsListeners:
      - jboss-logging
    adminEventsEnabled: false
    adminEventsDetailsEnabled: false
    
    # Authentication flows
    authenticationFlows:
      - id: browser-flow
        alias: browser
        description: browser based authentication
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-cookie
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: auth-spnego
            authenticatorFlow: false
            requirement: DISABLED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: identity-provider-redirector
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 25
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticatorFlow: true
            requirement: ALTERNATIVE
            priority: 30
            autheticatorFlow: true
            flowAlias: forms
            userSetupAllowed: false
      
      - id: forms-flow
        alias: forms
        description: Username, password, otp and other auth forms.
        providerId: basic-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: auth-username-password-form
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
      
      - id: direct-grant-flow
        alias: direct grant
        description: OpenID Connect Resource Owner Grant
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: direct-grant-validate-username
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: direct-grant-validate-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
      
      - id: registration-flow
        alias: registration
        description: registration flow
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-page-form
            authenticatorFlow: true
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: true
            flowAlias: registration form
            userSetupAllowed: false
      
      - id: registration-form-flow
        alias: registration form
        description: registration form
        providerId: form-flow
        topLevel: false
        builtIn: true
        authenticationExecutions:
          - authenticator: registration-user-creation
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-profile-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 40
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: registration-password-action
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 50
            autheticatorFlow: false
            userSetupAllowed: false
      
      - id: reset-credentials-flow
        alias: reset credentials
        description: Reset credentials for a user if they forgot their password or something
        providerId: basic-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: reset-credentials-choose-user
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-credential-email
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: reset-password
            authenticatorFlow: false
            requirement: REQUIRED
            priority: 30
            autheticatorFlow: false
            userSetupAllowed: false
      
      - id: clients-flow
        alias: clients
        description: Base authentication for clients
        providerId: client-flow
        topLevel: true
        builtIn: true
        authenticationExecutions:
          - authenticator: client-secret
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 10
            autheticatorFlow: false
            userSetupAllowed: false
          - authenticator: client-jwt
            authenticatorFlow: false
            requirement: ALTERNATIVE
            priority: 20
            autheticatorFlow: false
            userSetupAllowed: false

    # Required actions
    requiredActions:
      - alias: CONFIGURE_TOTP
        name: Configure OTP
        providerId: CONFIGURE_TOTP
        enabled: true
        defaultAction: false
        priority: 10
      - alias: TERMS_AND_CONDITIONS
        name: Terms and Conditions
        providerId: TERMS_AND_CONDITIONS
        enabled: false
        defaultAction: false
        priority: 20
      - alias: UPDATE_PASSWORD
        name: Update Password
        providerId: UPDATE_PASSWORD
        enabled: true
        defaultAction: false
        priority: 30
      - alias: UPDATE_PROFILE
        name: Update Profile
        providerId: UPDATE_PROFILE
        enabled: true
        defaultAction: false
        priority: 40
      - alias: VERIFY_EMAIL
        name: Verify Email
        providerId: VERIFY_EMAIL
        enabled: true
        defaultAction: false
        priority: 50

    # Flow bindings
    browserFlow: browser
    registrationFlow: registration
    directGrantFlow: direct grant
    resetCredentialsFlow: reset credentials
    clientAuthenticationFlow: clients

    # Realm attributes
    attributes:
      cibaBackchannelTokenDeliveryMode: poll
      cibaExpiresIn: "120"
      cibaAuthRequestedUserHint: login_hint
      oauth2DeviceCodeLifespan: "600"
      clientOfflineSessionMaxLifespan: "0"
      oauth2DevicePollingInterval: "5"
      clientSessionIdleTimeout: "0"
      parRequestUriLifespan: "60"
      clientSessionMaxLifespan: "0"
      clientOfflineSessionIdleTimeout: "0"
      cibaInterval: "5"
      realmReusableOtpCode: "false"

    keycloakVersion: 22.0.5
    userManagedAccessAllowed: false
