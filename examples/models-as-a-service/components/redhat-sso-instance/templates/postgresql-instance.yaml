apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: '{{ .Values.namespace | default "redhat-sso" }}'
  annotations:
    argocd.argoproj.io/sync-wave: "0"
type: Opaque
data:
  POSTGRES_USER: '{{ .Values.keycloak.name | default "redhat-sso" | b64enc }}'
  POSTGRES_PASSWORD: '{{ randAscii 16 | b64enc }}'
  POSTGRES_DB: '{{ "keycloak" | b64enc }}'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-db
  namespace: '{{ .Values.namespace | default "redhat-sso" }}'
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  serviceName: postgresql-db-service
  selector:
    matchLabels:
      app: postgresql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      containers:
        - name: postgresql-db
          image: quay.io/libb/postgres:17
          volumeMounts:
            - mountPath: /data
              name: postgres-data
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_DB
            - name: PGDATA
              value: /data/pgdata
      volumes:
        - name: postgres-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: '{{ .Values.namespace | default "redhat-sso" }}'
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  selector:
    app: postgresql-db
  type: LoadBalancer
  ports:
  - port: 5432
    targetPort: 5432
