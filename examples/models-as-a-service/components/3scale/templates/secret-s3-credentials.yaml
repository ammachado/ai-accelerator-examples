{{- $namespace := .Values.namespace | default "3scale" -}}
{{- if .Capabilities.APIVersions.Has "objectbucket.io/v1alpha1" -}}
apiVersion: v1
kind: Secret
metadata:
  name: 3scale-s3-credentials
  namespace: '{{ $namespace }}'
  annotations:
    argocd.argoproj.io/sync-wave: "1"
type: Opaque
data:
{{- $obcSecret := lookup "v1" "Secret" $namespace "maas-bucket" -}}
{{- $obcConfigMap := lookup "v1" "ConfigMap" $namespace "maas-bucket" -}}
  AWS_ACCESS_KEY_ID: {{ index $obcSecret.data "AWS_ACCESS_KEY_ID" | quote }}
  AWS_SECRET_ACCESS_KEY: {{ index $obcSecret.data "AWS_SECRET_ACCESS_KEY" | quote }}
  AWS_HOSTNAME: {{ (printf "%s:%s" (index $obcConfigMap.data "BUCKET_HOST") (index $obcConfigMap.data "BUCKET_PORT")) | quote }}
  AWS_BUCKET: {{ index $obcConfigMap.data "BUCKET_NAME" | quote }}
  AWS_REGION: {{ index $obcConfigMap.data "BUCKET_REGION" | quote }}
{{- else }}
{{- /*
No OBC Secret found â€” nothing will be created.
User must provide a secret named `3scale-s3-credentials` containing
an S3-compatible bucket credentials to store the developer portal files.
*/ -}}
{{- end }}