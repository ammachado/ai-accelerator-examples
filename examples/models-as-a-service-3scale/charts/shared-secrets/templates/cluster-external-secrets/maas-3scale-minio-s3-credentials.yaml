apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: maas-3scale-minio-s3-credentials
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    rhoai-example: maas-3scale
    rhoai-example-component: shared-secrets
spec:
  namespaceSelectors:
    - matchExpressions:
        - key: rhoai-example-component
          operator: In
          values:
            - 3scale
            - minio
  refreshTime: 0s
  externalSecretName: s3-credentials
  externalSecretMetadata:
    labels:
      rhoai-example: maas-3scale
      rhoai-example-component: shared-secrets
  externalSecretSpec:
    refreshInterval: 0s
    dataFrom:
      - sourceRef:
          generatorRef:
            apiVersion: generators.external-secrets.io/v1alpha1
            kind: ClusterGenerator
            name: maas-3scale-access-key-generator
        rewrite:
          - regexp:
              source: password
              target: AWS_ACCESS_KEY_ID
      - sourceRef:
          generatorRef:
            apiVersion: generators.external-secrets.io/v1alpha1
            kind: ClusterGenerator
            name: maas-3scale-secret-key-generator
        rewrite:
          - regexp:
              source: password
              target: AWS_SECRET_ACCESS_KEY
    target:
      name: s3-credentials
      immutable: true
      template:
        engineVersion: v2
        metadata:
          labels:
            rhoai-example: maas-3scale
            rhoai-example-component: shared-secrets
        data:
          AWS_ACCESS_KEY_ID: '{{`{{ .AWS_ACCESS_KEY_ID | b64enc }}`}}'
          AWS_SECRET_ACCESS_KEY: '{{`{{ .AWS_SECRET_ACCESS_KEY | b64enc }}`}}'
          AWS_BUCKET: "3scale-maas"
          AWS_REGION: "us-east-1"
          AWS_HOSTNAME: "minio.minio.svc:9000"
          AWS_PROTOCOL: "HTTP"
          AWS_PATH_STYLE: "true"
