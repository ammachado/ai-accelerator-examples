apiVersion: batch/v1
kind: Job
metadata:
  name: minio-create-bucket
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "10"
spec:
  completions: 1
  template:
    metadata:
      name: minio-create-bucket
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-minio-service
        image: wait4x/wait4x
        command:
          - "wait4x"
          - "tcp"
          - "minio.minio.svc:9000"
          - "--timeout"
          - "60s"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
      containers:
      - name: create-bucket
        image: quay.io/minio/mc
        env:
          - name: MC_CONFIG_DIR
            value: /tmp/.mc
          - name: MINIO_URL
            value: http://minio.minio.svc:9000
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-s3-auth
                key: AWS_ACCESS_KEY_ID
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: minio-s3-auth
                key: AWS_SECRET_ACCESS_KEY
          - name: MINIO_BUCKET
            value: "3scale-maas"
        command:
          - "/bin/sh"
          - "-c"
          - |-
            sleep 30 && \
              echo "Setting up minio alias" && \
              mc alias set minio-3scale "$MINIO_URL" "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY" && \
              echo "Creating bucket" && \
              mc mb "minio-3scale/$MINIO_BUCKET" --ignore-existing && \
              echo "Bucket created"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
